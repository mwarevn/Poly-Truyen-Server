<div class="divider sdivider-neutral"></div>
<div class="flex items-center justify-between">
  <h3 class="font-bold text-xl">Categories Manager</h3>
  <div class="btn btn-sm btn-neutral btn-add-new" onclick="modal_cats_editor.showModal()">Thêm thể loại +</div>
</div>
<div class="divider sdivider-neutral"></div>

<!-- table -->
<!-- Table -->
<div class="overflow-x-auto mb-5 min-h-screen">
  <table class="table">
    <thead>
      <tr>
        <th>#</th>
        <th>Tên thể loại</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
</div>

<!-- modal cats editor -->
<dialog id="modal_cats_editor" class="modal modal-bottom sm:modal-middle">
  <div class="modal-box">
    <h3 class="font-bold text-lg">Cats Editor</h3>

    <form id="form-cats-editor" method="POST" class="modal-body">
      <label class="mt-4 input input-bordered flex items-center gap-2">
        <input id="cats-name" name="name" type="text" class="grow" placeholder="Type category name..." autocomplete="off" required />
      </label>

      <button type="reset" class="btn-reset" hidden></button>
    </form>
    <div class="modal-action">
      <form method="dialog" class="close-modal">
        <button class="btn">Close</button>
      </form>
      <button class="btn btn-neutral btn-success btn-save-change" type="button">Save</button>
    </div>
  </div>
</dialog>

<script>
  let listCats = [];
  let currentId = null;
  let currentIndex = null;

  // fetch all cats from cats/get-all-cats and fill to table tbody
  fetch("/cats/get-all-cats")
    .then(res => res.json())
    .then(data => {
      listCats = data;
      const tbody = document.querySelector("tbody");
      tbody.innerHTML = data.map((cat, i) => `
                <tr>
                    <td>${i + 1}</td>
                    <td>${cat.name}</td>
                    <td>
                        <div class="flex">
                            <!-- btn edit -->
                            <button onclick="setEditingCats('${i}')" class="btn btn-ghost btn-circle">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128Zm0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42" />
                            </svg>
                            </button>
                            <!-- btn remove -->
                            <button onclick="setRemoveCats('${i}')" class="btn btn-ghost btn-circle">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                            </svg>
                            </button>
                        </div>    
                    </td>
                </tr>
            `).join("");
    });

  // handle add cats
  const modal_cats_editor = document.getElementById("modal_cats_editor");
  const form_cats_editor = document.getElementById("form-cats-editor");
  const btn_save_change = document.querySelector(".btn-save-change");
  const cats_name = document.getElementById("cats-name");

  const setEditingCats = (index) => {
    form_cats_editor.name.value = listCats[index].name;
    currentId = listCats[index]._id;
    modal_cats_editor.showModal();
  };

  const setRemoveCats = (index) => {
    currentId = listCats[index]._id;
    if (confirm("Are you sure to remove this category?")) {
      fetch("/cats/delete/" + currentId, {
          method: "delete",
        })
        .then((res) => res.json())
        .then((res) => {
          if (res.msg) {
            alert(res.msg);
            return;
          } else {
            window.location.reload();
          }
        });
    }
  };

  btn_save_change.onclick = () => {
    const name = cats_name.value;

    fetch(`cats/${currentId ? "update/" + currentId : "create"}`, {
        method: currentId ? "PUT" : "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          name: name
        }),
      })
      .then((res) => res.json())
      .then((res) => {
        if (res.msg) {
          alert(res.msg);
          return;
        } else {
          window.location.reload();
        }
      });

  };

  // handle modal close
  modal_cats_editor.addEventListener("close", () => {
    currentId = null;
    currentIndex = null;
    form_cats_editor.reset();
  });
</script>